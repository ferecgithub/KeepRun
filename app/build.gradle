plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
    id 'dagger.hilt.android.plugin'
    id 'androidx.navigation.safeargs.kotlin'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
    id 'com.google.android.libraries.mapsplatform.secrets-gradle-plugin'
}

android {
    compileSdkVersion AppConfig.compile_sdk_version

    defaultConfig {
        applicationId AppConfig.application_id
        minSdk AppConfig.min_sdk
        targetSdk AppConfig.target_sdk
        versionCode AppConfig.version_code
        versionName AppConfig.version_name
        vectorDrawables.useSupportLibrary = true

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
        
        javaCompileOptions {
            annotationProcessorOptions {
                arguments["dagger.hilt.disableModulesHaveInstallInCheck"] = "true"
            }
        }

        testInstrumentationRunner AppConfig.test_instrumentation_runner
    }

    buildTypes {
        release {
            testCoverageEnabled = true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            testCoverageEnabled = true
            minifyEnabled false
            applicationIdSuffix ".debug"
        }
    }
    compileOptions {
        sourceCompatibility AppConfig.java_version
        targetCompatibility AppConfig.java_version
    }

    kotlinOptions {
        jvmTarget = AppConfig.jvm_target
    }

    testOptions.unitTests.all {
        testLogging {
            events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
        }
    }

    buildFeatures {
        viewBinding true
    }

    packagingOptions {
        resources.excludes.add("META-INF/*")
    }
}

hilt { enableAggregatingTask = true }

kapt {
    correctErrorTypes true
}

dependencies {

    implementation project(':domain')
    implementation project(':data')
    implementation project(':presentation')

    // Dagger Hilt kapt
    implementation DaggerHilt.hilt_android
    implementation DaggerHilt.hilt_lifecycle_viewmodel
    kapt DaggerHilt.hilt_android_compiler_kapt
    kapt DaggerHilt.hilt_compiler_kapt

    // Room kapt
    implementation Room.room_runtime
    implementation Room.room_ktx
    kapt Room.room_compiler_kapt

    // Test Suites
    implementation TestSuites.junit_jupiter_api
    implementation TestSuites.junit_jupiter_engine
    implementation TestSuites.mockk
    implementation TestSuites.androidx_text_espresso_core
    
}